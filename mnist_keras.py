# -*- coding: utf-8 -*-
"""mnist_keras.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MsqE8ViBQq7mmiSseBY3mggyVl7H1SIr
"""

# Install TensorFlow if needed
# !pip install tensorflow

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical

# 1. Load MNIST
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train/255.0, x_test/255.0
y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)

# 2. Build a simple MLP
hidden_units = 128
learning_rate = 0.001

model = Sequential([
    Flatten(input_shape=(28,28)),
    Dense(hidden_units, activation='relu'),
    Dense(10, activation='softmax')
])

model.compile(optimizer=Adam(learning_rate=learning_rate),
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# 3. Train the model
epochs = 5
batch_size = 64
history = model.fit(x_train, y_train, epochs=epochs, batch_size=batch_size,
                    validation_split=0.1, verbose=1)

# 4. Evaluate on test set
loss, accuracy = model.evaluate(x_test, y_test)
print(f"Test Accuracy: {accuracy:.4f}")

